<body class="bg-cover bg-no-repeat bg-bottom background-image flex flex-col items-center scale-50">

  <!-- TODO: move control to hbs partials, move script to separate script file. -->

    <div class="container mx-auto px-4" style="display: block;">
        <div class="w-full text-white flex flex-col pt-12">
          
      <div class="flex flex-col justify-center items-center">
        <h1 class="text-xl mt-3 md:mb-5 text-center">Forecast for {{data.currentDate}}</h1>
        <h1 id="regionDisplay" class="text-xl md:mb-5 text-center">Your region is: {{data.region}}</h1>
        <p class="w-9/10 mt-3 md:w-1/2 text-center">{{data.forecastResult}}</p>
      </div>
      <div class="md:mt-5 max-w-screen-lg w-full mx-auto md:px-6">
        <canvas id="forecastChart"></canvas>
      </div>
      {{!-- <p class="md:text-xl text-center mt-5 md:mt-10 md:mb-8">
        Carbon Intensity data provided by
        <a href="https://www.electricitymaps.com/" target="_blank" class="text-blue-500 underline">
          electricitymaps.com
        </a>
      </p> --}}

      {{!-- <div id="subscribeControls" class="text-center mt-8 h-2/5 mb-10">
        <p class="m-3">You can leave your Email or WhatsApp below to subscribe
          to our daily recommendations</p>
        <form method="POST" action="" id="emailSubscriptionForm"
          class="px-5 flex flex-col md:flex-row md:justify-center">
          <div id="emailField">
            <input name="email" id="emailInput"
              class="mx-3 bg-transparent border-2 border-white text-white font-bold rounded-lg text-lg px-6 py-3 hover:bg-white hover:text-gray-800 transition-colors duration-300"
              placeholder="Enter your email" />
          </div>
          <input name="region" type="text" class="hidden" id="regionInput" value="{{data.region}}" />
          <div>
            <button type="submit"
              class="bg-black text-white font-bold rounded-lg text-lg px-6 py-3 hover:bg-gray-800 transition-colors duration-300 mt-5 md:mt-0">Submit</button>
          </div>
        </form>
        <form method="POST" action="" id="whatsAppSubscriptionForm"
          class="px-5 flex flex-col md:flex-row md:justify-center">
          <div id="phoneField">
            <input name="phone" id="phoneInput"
              class="mx-3 bg-transparent border-2 border-white text-white font-bold rounded-lg text-lg px-6 py-3 hover:bg-white hover:text-gray-800 transition-colors duration-300"
              placeholder="+49 ..." />
          </div>
          <input name="region" type="text" class="hidden" id="regionInput" value="{{data.region}}" />
          <div>
            <button type="submit"
              class="bg-black text-white font-bold rounded-lg text-lg px-6 py-3 hover:bg-gray-800 transition-colors duration-300 mt-5 md:mt-0">Submit</button>
          </div>
        </form>
      </div> --}}
      <p class="md:text-xl text-center mt-5 md:mt-10 mb-8 md:mb-8">
        Renewable Energy Generation data provided by
        <a href="https://www.smard.de/" target="_blank" class="text-blue-500 underline">
          Bundesnetzagentur | SMARD.de
        </a>
      </p>
    </div>
  </div>



  {{!--
  <script src="/js/subscription.js"></script> --}}
  <script type="module">
    import { initializeChart } from "/js/chart.js"

    const timeFrameData = JSON.parse(`{{{data.time_frames}}}`);
    const windEnergyData = JSON.parse(`{{{data.wind_energy_numbers}}}`);


    const canvas = document.getElementById('forecastChart');
    const ctx = canvas.getContext('2d');

    if (timeFrameData.length === 0) {
      // Display "No Data Available" directly on the canvas
      const noDataMessage = "Apologies, currently there is no Data Available";

      canvas.width = 800;
      canvas.height = 200;


      // Set font and alignment
      ctx.font = "20px Arial";
      ctx.fillStyle = "rgba(84, 176, 226, 50)"; // Text color
      ctx.textAlign = "left";
      ctx.textBaseline = "middle";

      // Draw text in the center of the canvas
      ctx.fillText(noDataMessage, canvas.width / 4, 80);

    } else {

      const chartData = { labels: Array.from({ length: 24 }, (_, i) => i + ":00"), vals: windEnergyData, time_frames: timeFrameData }
      console.log("Chartdata Values", chartData.vals)
      initializeChart(chartData)

    }
    // Accessing HBS data
  </script>

  <script>
    const urlParams = new URLSearchParams(window.location.search);
    const country = urlParams.get('country');

    if (country) {
      const regionElement = document.getElementById('regionDisplay');
      regionElement.textContent += ` ${country}`;
    }
  </script>

</body>