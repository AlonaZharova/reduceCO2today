<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Request Logs</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
            background-color: #f5f5f5;
        }
        .container {
            max-width: 1200px;
            margin: 0 auto;
            background-color: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        h1 {
            color: #333;
            text-align: center;
            margin-bottom: 30px;
        }
        .stats {
            display: flex;
            justify-content: space-around;
            margin-bottom: 20px;
            padding: 15px;
            background-color: #f8f9fa;
            border-radius: 5px;
        }
        .stat-item {
            text-align: center;
        }
        .stat-number {
            font-size: 24px;
            font-weight: bold;
            color: #007bff;
        }
        .stat-label {
            color: #666;
            font-size: 14px;
        }
        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }
        th, td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }
        th {
            background-color: #007bff;
            color: white;
            font-weight: bold;
        }
        tr:hover {
            background-color: #f5f5f5;
        }
        .method {
            font-weight: bold;
            padding: 4px 8px;
            border-radius: 3px;
            font-size: 12px;
        }
        .method.get {
            background-color: #28a745;
            color: white;
        }
        .status-2xx { color: #28a745; }
        .status-4xx { color: #ffc107; }
        .status-5xx { color: #dc3545; }
        .pagination {
            display: flex;
            justify-content: center;
            margin-top: 20px;
            gap: 10px;
        }
        .pagination button {
            padding: 8px 16px;
            border: 1px solid #007bff;
            background-color: white;
            color: #007bff;
            cursor: pointer;
            border-radius: 4px;
        }
        .pagination button:hover {
            background-color: #007bff;
            color: white;
        }
        .pagination button:disabled {
            background-color: #e9ecef;
            color: #6c757d;
            cursor: not-allowed;
            border-color: #e9ecef;
        }
        .loading {
            text-align: center;
            padding: 20px;
            color: #666;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Request Logs</h1>
        
        <div class="stats">
            <div class="stat-item">
                <div class="stat-number" id="totalLogs">-</div>
                <div class="stat-label">Total Requests</div>
            </div>
            <div class="stat-item">
                <div class="stat-number" id="avgResponseTime">-</div>
                <div class="stat-label">Avg Response Time (ms)</div>
            </div>
            <div class="stat-item">
                <div class="stat-number" id="successRate">-</div>
                <div class="stat-label">Success Rate</div>
            </div>
        </div>

        <div id="loading" class="loading">Loading logs...</div>
        
        <table id="logsTable" style="display: none;">
            <thead>
                <tr>
                    <th>Timestamp</th>
                    <th>Method</th>
                    <th>URL</th>
                    <th>IP Address</th>
                    <th>Status Code</th>
                    <th>Response Time (ms)</th>
                    <th>User Agent</th>
                </tr>
            </thead>
            <tbody id="logsTableBody">
            </tbody>
        </table>

        <div class="pagination" id="pagination" style="display: none;">
            <button id="prevBtn" onclick="changePage(-1)">Previous</button>
            <span id="pageInfo"></span>
            <button id="nextBtn" onclick="changePage(1)">Next</button>
        </div>
    </div>

    <script>
        let currentPage = 1;
        let totalPages = 1;

        async function loadLogs(page = 1) {
            try {
                const response = await fetch(`/logs?page=${page}&limit=50`);
                const data = await response.json();
                
                if (data.logs) {
                    displayLogs(data.logs);
                    updatePagination(data.pagination);
                    updateStats(data.logs);
                    
                    document.getElementById('loading').style.display = 'none';
                    document.getElementById('logsTable').style.display = 'table';
                    document.getElementById('pagination').style.display = 'flex';
                }
            } catch (error) {
                console.error('Error loading logs:', error);
                document.getElementById('loading').textContent = 'Error loading logs';
            }
        }

        function displayLogs(logs) {
            const tbody = document.getElementById('logsTableBody');
            tbody.innerHTML = '';

            logs.forEach(log => {
                const row = document.createElement('tr');
                
                const timestamp = new Date(log.timestamp).toLocaleString();
                const methodClass = log.method.toLowerCase();
                const statusClass = log.statusCode ? 
                    (log.statusCode >= 200 && log.statusCode < 300 ? 'status-2xx' : 
                     log.statusCode >= 400 && log.statusCode < 500 ? 'status-4xx' : 'status-5xx') : '';
                
                row.innerHTML = `
                    <td>${timestamp}</td>
                    <td><span class="method ${methodClass}">${log.method}</span></td>
                    <td>${log.url}</td>
                    <td>${log.ip}</td>
                    <td class="${statusClass}">${log.statusCode || '-'}</td>
                    <td>${log.responseTime || '-'}</td>
                    <td title="${log.userAgent || ''}">${(log.userAgent || '').substring(0, 50)}${(log.userAgent || '').length > 50 ? '...' : ''}</td>
                `;
                
                tbody.appendChild(row);
            });
        }

        function updatePagination(pagination) {
            currentPage = pagination.currentPage;
            totalPages = pagination.totalPages;
            
            document.getElementById('pageInfo').textContent = `Page ${currentPage} of ${totalPages}`;
            document.getElementById('prevBtn').disabled = !pagination.hasPrevPage;
            document.getElementById('nextBtn').disabled = !pagination.hasNextPage;
        }

        function updateStats(logs) {
            const totalLogs = logs.length;
            const avgResponseTime = logs.reduce((sum, log) => sum + (log.responseTime || 0), 0) / logs.length;
            const successCount = logs.filter(log => log.statusCode >= 200 && log.statusCode < 300).length;
            const successRate = totalLogs > 0 ? ((successCount / totalLogs) * 100).toFixed(1) : 0;
            
            document.getElementById('totalLogs').textContent = totalLogs;
            document.getElementById('avgResponseTime').textContent = avgResponseTime.toFixed(0);
            document.getElementById('successRate').textContent = successRate + '%';
        }

        function changePage(delta) {
            const newPage = currentPage + delta;
            if (newPage >= 1 && newPage <= totalPages) {
                loadLogs(newPage);
            }
        }

        // Load logs when page loads
        document.addEventListener('DOMContentLoaded', () => {
            loadLogs();
        });
    </script>
</body>
</html>


